"use strict";(self.webpackChunkgrafana_panel_docs=self.webpackChunkgrafana_panel_docs||[]).push([[156],{5939:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return l},contentTitle:function(){return r},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=a(7462),i=a(3366),o=(a(7294),a(3905)),p=["components"],l={},r="Add Data To Circuits",s={unversionedId:"Data Settings/map-data",id:"Data Settings/map-data",isDocsHomePage:!1,title:"Add Data To Circuits",description:"The GlobalNOC Worldvie Panel allows multiple data points to be mapped to a particular circuit which can then be displayed on its tooltip like this example below:",source:"@site/docs/Data Settings/map-data.md",sourceDirName:"Data Settings",slug:"/Data Settings/map-data",permalink:"/globalnoc-worldview-panel/docs/Data Settings/map-data",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Data Settings/map-data.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configure The Legend",permalink:"/globalnoc-worldview-panel/docs/Legend Options/configure-legend"}},c=[],d={toc:c};function u(t){var e=t.components,l=(0,i.Z)(t,p);return(0,o.kt)("wrapper",(0,n.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"add-data-to-circuits"},"Add Data To Circuits"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"GlobalNOC Worldvie Panel")," allows multiple data points to be mapped to a particular circuit which can then be displayed on its tooltip like this example below:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Multiple Data Points Tooltip",src:a(6697).Z})),(0,o.kt)("p",null,"In the example above, the tooltip has two different metrics applied to it namely ",(0,o.kt)("inlineCode",{parentName:"p"},"Input")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Output"),". Let's walk through how to apply these datapoints to a worldview map."),(0,o.kt)("p",null,"All grafana datasources send the panel an array of datapoints like the example below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "name": "hostname.a.b.c+interfaceET-12+input",\n    "datapoints": [[1856397.26666666, 1633959000], [1650972.84444445, 1633958640], [1373735.42222222, 1633958280],\u2026] \n  },\n  {\n    "name": "hostname.a.b.c+interfaceGE-42+input",\n    "datapoints": [[1856397.26666666, 1633959000], [1650972.84444445, 1633958640], [1373735.42222222, 1633958280],\u2026] \n  },\n  {\n    "name": "hostname.a.b.c+interfaceET-12+output",\n    "datapoints": [[19015224.4666666, 1633959000], [16855873.2777778, 1633958640], [15234882.4222223, 1633958280],\u2026] \n  },\n  {\n    "name": "hostname.d.e.f+interfaceET-45+input",\n    "datapoints": [[986576809.333332, 1633959000], [913103824.399999, 1633958640], [890706239.466668, 1633958280],\u2026] \n  },\n  ...\n]\n')),(0,o.kt)("p",null,"To apply say the first two data points from the example above, the circuit map json should look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"adjacencies": [\n  ...,\n  {\n    "id": "O2LPdq", // Circuit ID\n    "anchors": [\n      // Circuit Path Anchors (This example shows a Cubic [C] bezier curve)\n      // That will be drawn with the anchors below between Chicago and Amsterdam\n      "C",\n      [62.42273329229529, -79.98046875000001],\n      [67.73918797934685, -13.183593750000002]\n    ],\n    "a": "8PrAEX", // Chicago Endpoint ID\n    "b": "0ZUNVC", // Amsterdam Endpoint ID\n    "label": "Chicago - Amsterdam", // Circuit Label\n    "metadata": {\n      // Circuit specific metadata\n      "data_targets": [\n        "hostname.a.b.c+interfaceET-12+input", // Will be used to calculate circuit `Input`\n        "hostname.a.b.c+interfaceGE-42+input", // Will be used to calculate circuit `Input`\n        "hostname.a.b.c+interfaceET-12+output" // Will be used to calculate circuit `Output`\n      ] \n    },\n    "min": 0, // Minimum Circuit Speed\n    "max": 10000000000 // Maximum Circuit Speed\n  },\n  ...\n],\n...\n')),(0,o.kt)("p",null,"Each circuit should have a ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata.data_targets")," property on it that will be an list of the exact target names of the datapoints it expects to receive from its respective datasource."),(0,o.kt)("p",null,"Once the ",(0,o.kt)("inlineCode",{parentName:"p"},"data_targets")," property has been set correctly, Head on over to the panel settings to divide the datapoints that will be mapped to the circuits into two groups: ",(0,o.kt)("inlineCode",{parentName:"p"},"Input")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Output"),". Open the ",(0,o.kt)("inlineCode",{parentName:"p"},"Data Settings")," tab on the panel settings sidebar and add these two aggregate groups:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Multiple Data Points Tooltip",src:a(5878).Z})),(0,o.kt)("p",null,"Setting these aggregate groups will now map the ",(0,o.kt)("inlineCode",{parentName:"p"},"data_targets")," names that end with ",(0,o.kt)("inlineCode",{parentName:"p"},"input")," ",(0,o.kt)("inlineCode",{parentName:"p"},"(hostname.a.b.c+interfaceET-12+input, hostname.a.b.c+interfaceGE-42+input)")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Input")," group and names that end with ",(0,o.kt)("inlineCode",{parentName:"p"},"output")," ",(0,o.kt)("inlineCode",{parentName:"p"},"(hostname.a.b.c+interfaceET-12+input)")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Output")," group"))}u.isMDXComponent=!0},5878:function(t,e,a){e.Z=a.p+"assets/images/data-settings-agg-group-0f4ccd173dd6b444c83c0baa031959bb.png"},6697:function(t,e,a){e.Z=a.p+"assets/images/tooltip-multiple-data-5cb22a9754fe0a8c078bfcd744f50bb3.png"}}]);